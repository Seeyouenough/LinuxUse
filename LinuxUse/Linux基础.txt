source  path/.sql;
mysql导入数据库信息

解压
tar -zxvf *.tar.gz

压缩
tar -czvf *  *.tzr.gz

给予读写可执行权限
chmod a+rwx *

执行程序后+& ---> 后台执行

改变用户所有权
chown -R wx:wx   file/

优化屏障则用于限制编译器的指令重排
通用屏障则对读写操作都有作用
读屏障用于保证读操作有序。屏障之前的读操作一定会先于屏障之后的读操作完成，写操作不受影响
rmb(读内存屏障）保证了屏障之前的读操作一定会在后来的读操作执行之前完成
wmb 保证写操作不会乱序, mb 指令保证了两者都不会

fp=fopen("file","w");
可以随意读和写
可以在原有内容后追加写
写操作结束后可以从头开始读

系统当前已经加载的所有文件系统在/etc/mtab文件中得到反映。

OSI模型，即开放式通信系统互联参考模型
开放式系统互联

常见文件系统 系统函数
fcntl  文件控制  
open  打开文件   
creat  创建新文件  
close  关闭文件描述字  
read  读文件  
write  写文件  
readv  从文件读入数据到缓冲数组中  
writev  将缓冲数组里的数据写入文件  
pread 对文件随机读  
pwrite  对文件随机写 

使用fork函数得到的子进程从父进程的继承了整个进程的地址空间，包括：进程上下文、进程堆栈、内存信息、打开的文件描述符、信号控制设置、进程优先级、进程组号、当前工作目录、根目录、资源限制、控制终端等。
子进程与父进程的区别在于：
1、父进程设置的锁，子进程不继承（因为如果是排它锁，被继承的话，矛盾了）
2、各自的进程ID和父进程ID不同
3、子进程的未决告警被清除
4、子进程的未决信号集设置为空集

在使用mkdir命令创建新的目录时，在其父目录不存在时先创建父目录的命令是 mkdir -p 文件名


/ect/profile
此文件为系统的每个用户设置环境信息,当用户第一次登录时,该文件被执行.并从 /etc/profile.d 目录的配置文件中搜集shell的设置.
/etc/bashrc
为每一个 运行bash shell 的用户执行此文件.当bash shell被打开时,该文件被读取.
~/.bash_profile
每个用户都可使用该文件输入 专用于 自己使用的shell信息, 当用户登录时,该文件仅仅执行一次 !默认情况下,他设置一些环境变量,执行~/.bashrc文件.
~/.bashrc
该文件包含专用于用户的bash shell的bash信息 ,当登录时以及每次打开新的shell时,该该文件被读取 .
~/.bash_logout
当每次退出系统(退出bash shell)时,执行该文件.


注解作用，从产品角度看问题，手动启动与web工程的区别

